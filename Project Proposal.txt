Database Systems
CS 353
Project Proposal
Section 2
Group 7
Ali Altaf Salemwala - 21500413
Ekin Uyumaz - 21401247
Irmak Akkuzuluoğlu - 21401238
Gökçe Şakir Özyurt - 21402014

Introduction
This report is the proposal for our project: A Social Network for Questions and Answers.
This report will contain a short description of the program we will create, discuss the need for a
database system for this project, present an entity-relationship diagram for the system, and
discuss the advantages and disadvantages of the system used. It will end with a short list of our
planned future actions according to the requirements specified.
This, and future reports, are available at: altaf.salemwala.ug.bilkent.edu.tr

Description
The proposed program is an online social network service aimed at spreading knowledge
and connecting the learners with the learned by providing a platform where users may post
questions about topics they are curious about, and receive answers from other users. While
anybody can post on the service, users with verified experience and knowledge relevant to the
topic get special boosts. Users can also vote on posts made by other Users, allowing the popular
to rise to the top.
Posts may consist of simple text, links to external sites, audio, video, images, or any
combination of the previous. Users can delete their own posts for any reason they see fit. Posts
may also contain tags allowing a quick search for posts related to a certain topic. Tags can be
entered by a User before submitting a post.
Users can choose to befriend other Users they get along with, or follow interesting Users
for updates regarding their activities. Users can also privately message each other, or have group
chat-rooms, where informal conversation can be held. There are no votes for messages in private
or group chats. Walls are spaces belonging to each User where they may post items of interest.
Moderators (Mods) are special Users who moderate the content of the site, ensuring that
members behave according to the rules. As a result, Mods have the ability to delete inappropriate
posts and ban Users who misbehave. They may also unban Users for any reason they find
appropriate.
The accounts made by Users are registered using email addresses, and each is given a
unique ID. Users can edit attributes of their accounts if they prefer. Users may also add interests
and biographies about themselves to show to other Users, and avatars to display.
In order to facilitate focused discussion, Users will be allowed to create special Rooms
where discussions focused on a certain topic are held, and only Questions related to the topic are
posted. Users are free to join and leave these Rooms, and give them names as they please. Some
Rooms are provided to all Users in advance, to help start the discussion. These preset categories
are: Psychology -- Entertainment -- Food -- History -- Travel -- Business -- Music -- Science.
Searches through the service allow Users to search by UserName, Question, Tag, or
Room. Users can choose to set privacy settings limiting the visibility of their profiles, restricting
their appearance in searches, and also limit interaction with other members.
Our system mixes aspects of many pre-existing services, and one can check them to get
an idea of what our features mean. Quora, StackExchange, and Reddit are the primary
inspirations, while some ideas are also influenced by FaceBook, Twitter, and GoodReads.

The Need for a Database
This project consists of a large collection of Users with complex relations amongst
themselves, such as friends and followers. A database can model these relationships and allow
changes to be made to them in an efficient and controlled manner. The software needs to be able
to handle Reports made by Users, the status of banned and un-banned Users, messages, Groups,
Rooms, Questions, Answers and Replies posted, along with the attributes inside the relations
between these entities. To model this complexity and to allow the administrators to control and
alter the model as is required, a database system is required.
Additionally, Users need to interact with the database by adding and removing details
such as their biographies, interests, credentials, etc. They will add friends, follow others, send
and receive messages, join and leave Rooms and message groups, and post questions, answers
and replies. All of these aspects of the user experience need to be stored and manipulated, which
is where the database comes into use. Furthermore, searches performed by the User need to
readily present results relevant to their search terms, and this can feasibly be implemented by
translating the searches into queries for the database.

Limitations
We need to design the system so that Moderators have enough power to keep the forum
within the rule limits, but not enough to abuse their power. We want to keep them answerable to
the Users.
We are not sure how much memory we will have available to store information, so we
will need to be cautious of the amount of space our design takes.
The system is not made with scalability in mind, and so it will not be able to handle
heavy loads of users.
A relatively secure network is needed to handle passwords, account information, and
facilitate logins. Users may not want to reveal their real identities, and if they do, they will want
to guard access to it.
Online forums and Question-Answer sites can often have difficult User Interfaces, so our
goal will be to design the system in such a way that it enables a simple UI.

Requirements
A database system to coordinate the relationships between the many entities in the
system, and to ease the addition or removal of features in the future. The server will hopefully be
maintained on the laptop of a group member. The user should have no direct contact with the
database, and instead should only be able to alter it using a preset interface.
A website the users may use the service to its fullest extent. It should be simple and
intuitive, but well-designed enough to ensure the use of all features. Database queries will be
automatically generated using the website’s interface.

Functional Requirements
 Users can log in with set usernames and passwords.
 Users can add other users as friends and follow them.
 Users can send and receive messages to other users.
 Users can create and join Rooms and Groups.
 Users can post Questions, Answers and Replies.
 Users can vote on Questions, Answers, and Replies.
 Users can report other users or inappropriate posts to Moderators.
 Moderators can delete inappropriate posts.
 Moderators can ban Users who misbehave, and unban them as well.

Non-Functional Requirements
 The system should be fast and responsive to the User’s inputs.
 The code has a high amount of entities and relationships, and so should be well
modulated and should have high testability in case problems arise.
 The system should have a secure connection to the User so that private data is not leaked.
 The system should remain reliable even if a lot of data is added to the system.
 The system should be extensible so that features may be easily added.

Plans
We will first analyze the E/R diagram in depth with the TA to find any problems or
inconsistencies. Once the diagram and design is finalized, we will decide on which languages to
use for the project. Then, after designing the User Interface to fit the requirements, we will begin
the implementation.

E/R Diagram